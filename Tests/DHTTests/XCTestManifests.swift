#if !canImport(ObjectiveC)
import XCTest

extension CRC32CTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CRC32CTests = [
        ("testCRC32C", testCRC32C),
    ]
}

extension DHTNetworkAddressExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DHTNetworkAddressExtensionsTests = [
        ("testDHTIPv4AddressValidNodeID_0", testDHTIPv4AddressValidNodeID_0),
        ("testDHTIPv4AddressValidNodeID_1", testDHTIPv4AddressValidNodeID_1),
        ("testDHTIPv4AddressValidNodeID_2", testDHTIPv4AddressValidNodeID_2),
        ("testDHTIPv4AddressValidNodeID_3", testDHTIPv4AddressValidNodeID_3),
        ("testDHTIPv4AddressValidNodeID_4", testDHTIPv4AddressValidNodeID_4),
        ("testDHTIPv4AddressValidRandomNodeID", testDHTIPv4AddressValidRandomNodeID),
        ("testDHTIPv6AddressMakeValidRandomNodeID", testDHTIPv6AddressMakeValidRandomNodeID),
    ]
}

extension DHTNetworkAddressTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DHTNetworkAddressTests = [
        ("testDHTIPv4AddressDescription", testDHTIPv4AddressDescription),
        ("testDHTIPv6AddressDescription", testDHTIPv6AddressDescription),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(CRC32CTests.__allTests__CRC32CTests),
        testCase(DHTNetworkAddressExtensionsTests.__allTests__DHTNetworkAddressExtensionsTests),
        testCase(DHTNetworkAddressTests.__allTests__DHTNetworkAddressTests),
    ]
}
#endif
